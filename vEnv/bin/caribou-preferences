#!/bin/sh
#
# Antler - a Caribou keyboard implementation
#
# Copyright (C) 2011 Eitan Isaacson <eitan@monotonous.org>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by the
# Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
# for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

ARCH=$(uname -m)

case $ARCH in
x86_64 | sparc64 | s390x | ppc64)
LIB_DIR=/usr/lib64
SECONDARY_LIB_DIR=/usr/lib
;;
* )
LIB_DIR=/usr/lib
SECONDARY_LIB_DIR=/usr/lib64
;;
esac

script_dir="$(dirname "$(readlink -f ${0})")"

prefix=/usr
exec_prefix=/usr
datarootdir=${prefix}/share

if [ $script_dir = "/usr/bin" ]
then
  datadir="$(/usr/bin/python -c "from gi.repository import GLib; print(':'.join(GLib.get_system_data_dirs()))")"
  export PYTHONPATH="/usr/lib/python2.7/site-packages${PYTHONPATH:+:$PYTHONPATH}"
  export GI_TYPELIB_PATH="$LIB_DIR/girepository-1.0${GI_TYPELIB_PATH:+:$GI_TYPELIB_PATH}"
  export LD_LIBRARY_PATH="$LIB_DIR${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
  export XDG_DATA_DIRS="/usr/share${datadir:+:$datadir}"
else
  export PYTHONPATH="$(dirname $script_dir)${PYTHONPATH:+:$PYTHONPATH}"
  export GI_TYPELIB_PATH="$(dirname $script_dir)/libcaribou${GI_TYPELIB_PATH:+:$GI_TYPELIB_PATH}"
  export LD_LIBRARY_PATH="$(dirname $script_dir)/libcaribou/.lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
fi

exec /usr/bin/python -c "
import signal
signal.signal(signal.SIGINT, signal.SIG_DFL)

from caribou.settings.preferences_window import PreferencesWindow
from caribou.settings import CaribouSettings
from gi.repository import Gtk

w = PreferencesWindow(CaribouSettings())

w.connect('delete-event', lambda x, y: Gtk.main_quit())

w.show_all()

try:
    Gtk.main()
except KeyboardInterrupt:
    Gtk.main_quit()
"
